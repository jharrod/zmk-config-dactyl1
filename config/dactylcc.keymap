#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2

#define HYPER(key) LS(LC(LA(LG(key))))
#define MEH(key)   LS(LC(LA(key)))

&mt {
    tapping-term-ms = <500>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};

&sl {
    release-after-ms = <2000>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    macros {
        ZMK_MACRO(inv_qm,

        wait-ms = <10>;
        tap-ms = <10>;
        bindings =
            <&macro_press &kp LALT>,
            <&macro_tap &kp KP_N1 &kp KP_N6 &kp KP_N8>,
            <&macro_release &kp LALT>;

        )
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
        keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL   &kp N1        &kp N2       &kp N3       &kp N4         &kp N5              &kp N6         &kp N7       &kp N8       &kp N9        &kp N0     &kp MINUS
&kp TAB     &kp Q         &kp W        &kp E        &kp R          &kp T               &kp Y          &kp U        &kp I        &kp O         &kp P      &kp BSLH
&kp CAPS    &hm LCTRL A   &hm LGUI S   &hm LALT D   &hm LSHIFT F   &kp G               &hm RSHIFT H   &hm RALT J   &hm LGUI K   &hm RCTRL L   &kp SEMI   &kp DQT
&kp LSHFT   &kp Z         &kp X        &kp C        &kp V          &kp B               &kp N          &kp M        &kp COMMA    &kp DOT       &kp FSLH   &kp RSHFT
                        &kp GRAVE     &kp BSLH     &kp LEFT     &kp RIGHT                               &kp UP       &kp DOWN     &kp LBKT      &kp RBKT
                                                                &kp ESC &none       &none &none
                                                                        &none       &bt BT_CLR
                                                   &kp BSPC &kp DEL  &kp LGUI       &mo LOWER   &kp RET   &kp SPACE
            >;
        };

        lower_layer {
            bindings = <
&trans   &kp F1    &kp F2   &kp F3   &kp F4   &kp F5            &kp F6     &kp F7   &kp F8   &kp F9    &kp F10  &trans
&trans   &kp F11   &kp F12  &trans   &trans   &trans            &trans     &trans    &trans  &trans    &trans   &trans
&trans   &trans    &trans   &trans   &trans   &trans            &trans     &trans    &trans  &trans    &trans   &trans
&trans   &trans    &trans   &trans   &trans   &trans            &trans     &trans    &trans  &trans    &trans   &trans
         &trans    &trans   &trans   &trans                                &trans    &trans   &trans   &trans
                             &bt BT_SEL 0 &bt BT_SEL 1        &trans &bt BT_CLR
                                          &bt BT_SEL 2        &trans
               &bt BT_SEL 3  &bt BT_SEL 4 &bt BT_SEL 5        &trans   &trans   &trans 
            >;
        };

    };
};